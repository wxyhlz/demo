<?xml version="1.0" encoding="UTF-8"?>
<!-- debug：默认为false，设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。
	scan：配置文件如果发生改变，将会重新加载，默认值为true。
	scanPeriod：检测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位时毫秒，当scan为true时，这个属性生效，默认时间间隔为1min。
 -->
<configuration debug="false" scan="false" scanPeriod="1 hour">
	<!-- 日志上下文名称 -->
	<contextName>logback</contextName>
	<!-- 设置参数，通过${paramName}获取参数值 -->
	<property name="log.path" value="E:/logs/demo"></property>
	
	<appender name="stdOut" class="ch.qos.logback.core.ConsoleAppender">
		<encoder>
			<pattern>%date{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
		</encoder>
		<!-- 日志输出拦截器，控制台只打印INFO级别的日志 -->
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>INFO</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>
	
	<!-- 文件日志Appender。可以配置日志文件的名称、日志的输出格式、滚动策略等。
		滚动策略：配置日志文件名称，最多可以保持多少个历史日志文件。当文件大小超过配置大小时，触发滚动策略。
	 	  如：日志文件大小超过20M（默认10M），触发滚动策略。 -->
    <appender name="daoFileAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<append>true</append>
		<file>${log.path}/dao.log</file>
        <encoder>
			<pattern>%date{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
		</encoder>
		<rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
			<fileNamePattern>${log.path}/dao.%d{yyyyMMddHH}.%i.log.zip</fileNamePattern>
            <maxHistory>30</maxHistory>
			<maxFileSize>20MB</maxFileSize>
        </rollingPolicy>
	</appender>
	
	<appender name="jobFileAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<append>true</append>
		<file>${log.path}/job.log</file>
        <encoder>
			<pattern>%date{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
		</encoder>
		<rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
			<fileNamePattern>${log.path}/job.%d{yyyyMMddHH}.%i.log.zip</fileNamePattern>
            <maxHistory>30</maxHistory>
			<maxFileSize>20MB</maxFileSize>
        </rollingPolicy>
	</appender>
	
	<appender name="fileAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<append>true</append>
		<file>${log.path}/demo.log</file>
        <encoder>
			<pattern>%date{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
		</encoder>
		<rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
			<fileNamePattern>${log.path}/demo.%d{yyyyMMddHH}.%i.log.zip</fileNamePattern>
            <maxHistory>30</maxHistory>
			<maxFileSize>20MB</maxFileSize>
        </rollingPolicy>
	</appender>
	
	<!--日志异步到数据库 -->
	<appender name="dbAppender" class="ch.qos.logback.classic.db.DBAppender">
        <connectionSource class="ch.qos.logback.core.db.DriverManagerConnectionSource">
			<driverClass>com.mysql.jdbc.Driver</driverClass>
			<url>jdbc:mysql://localhost:3306/demo?useUnicode=true&amp;characterEncoding=utf-8</url>
			<user>root</user>
			<password>root123</password>
		</connectionSource>
	</appender>
	
	<!-- 不同包下的日志放在不同的文件中 -->
	<logger name="com.wxyh.demo.dao" level="INFO" additivity="false">
		<appender-ref ref="daoFileAppender"/>
	</logger>
	<logger name="com.wxyh.demo.web.job" level="INFO" additivity="false">
		<appender-ref ref="jobFileAppender"/>
		<appender-ref ref="dbAppender"/>
	</logger>
	
	<!-- 日志输出级别 -->
	<root level="INFO">
		<appender-ref ref="stdOut"/>
		<appender-ref ref="fileAppender"/>
	</root>
	
</configuration>